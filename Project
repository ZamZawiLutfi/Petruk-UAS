#include <iostream>
#include <string>
#include <vector>
#include <sstream>
#include <algorithm>
#include <limits>
#include <cstring>

using namespace std;

// Struktur data produk skincare
struct Produk {
    string nama;
    string jenisKulit;
    string tujuan;
    int harga;
    int rating;
}; 

// Kelas sistem rekomendasi skincare
class Rekomendasi {
private:
    vector<Produk> daftarProduk;
    int hargaMin = numeric_limits<int>::max();
    int hargaMax = numeric_limits<int>::min();

public:
    void tambahProduk(const Produk& p) {
        daftarProduk.push_back(p);
        if (p.harga < hargaMin) hargaMin = p.harga;
        if (p.harga > hargaMax) hargaMax = p.harga;
    }

    vector<string> splitTujuan(const string& input) {
        vector<string> hasil;
        stringstream ss(input);
        string tujuan;
        while (getline(ss, tujuan, ',')) {
            tujuan.erase(0, tujuan.find_first_not_of(" \t"));
            hasil.push_back(tujuan);
        }
        return hasil;
    }

    bool cocokTujuan(const string& tujuanProduk, const vector<string>& tujuanUser) {
        for (const auto& t : tujuanUser) {
            if (tujuanProduk == t) return true;
        }
        return false;
    }

    int hitungSkor(const Produk& p, const string& jenisKulit, const vector<string>& tujuanUser, int hargaMaks) {
        int skor = 0;
        if (p.jenisKulit == jenisKulit || 
           (jenisKulit == "kombinasi" && 
           (p.jenisKulit == "berminyak" || p.jenisKulit == "kering" || p.jenisKulit == "kombinasi")))
            skor += 2;
        if (cocokTujuan(p.tujuan, tujuanUser))
            skor += 2;
        if (p.harga <= hargaMaks)
            skor += 1;
        return skor;
    }

    vector<Produk> cariRekomendasi(const string& jenisKulit, const vector<string>& tujuanUser, int hargaMaks) {
        vector<Produk> hasil;
        for (const auto& p : daftarProduk) {
            int skor = hitungSkor(p, jenisKulit, tujuanUser, hargaMaks);
            if (skor >= 4) {
                hasil.push_back(p);
            }
        }

        sort(hasil.begin(), hasil.end(), [](const Produk& a, const Produk& b) {
            return a.rating > b.rating;
        });

        return hasil;
    }

    void tampilkanMenu() {
        cout << "\n=== MENU REKOMENDASI SKINCARE ===\n";
        cout << "* Jenis kulit: berminyak, kering, sensitif, normal, kombinasi\n";
        cout << "* Tujuan skincare:\n";
        cout << "  mencerahkan, melembapkan, mengatasi jerawat, menenangkan,\n";
        cout << "  meratakan warna kulit, menghilangkan chicken skin,\n";
        cout << "  memperbaiki skin barrier\n";
        cout << "* Rentang harga produk: Rp " << hargaMin << "000 - Rp " << hargaMax << "000\n";
        cout << "-> Contoh input tujuan: mengatasi jerawat, mencerahkan\n\n";
    }
};
void tampilkanRekomendasi(Produk* produk) {
    cout << "- " << produk->nama 
         << "\n  Kulit: " << produk->jenisKulit 
         << "\n  Tujuan: " << produk->tujuan
         << "\n  Harga: Rp " << produk->harga << "000"
         << "\n  Rating: " << produk->rating << "/5\n\n";
}
int main() {
    Rekomendasi app;

    Produk daftar[] = {
        {"Glow Serum", "berminyak", "mencerahkan", 75, 5},
        {"Hydra Moist", "kering", "melembapkan", 50, 4},
        {"Acne Fighter", "berminyak", "mengatasi jerawat", 60, 5},
        {"Soothing Gel", "sensitif", "menenangkan", 55, 4},
        {"Tone Balance", "normal", "meratakan warna kulit", 65, 4},
        {"Barrier Cream", "sensitif", "memperbaiki skin barrier", 80, 5},
        {"Daily Repair", "kering", "memperbaiki skin barrier", 70, 4},
        {"Exfo Tonic", "kombinasi", "menghilangkan chicken skin", 60, 4},
        {"Smooth Touch", "kombinasi", "menghilangkan chicken skin", 55, 5}
    };

    for (Produk& p : daftar)
        app.tambahProduk(p);

    app.tampilkanMenu();

    char kulitInput[50];
    cout << "Masukkan jenis kulit Anda: ";
    cin.getline(kulitInput, 50);
    string jenisKulit(kulitInput);

    string inputTujuan;
    cout << "Masukkan tujuan skincare (pisahkan dengan koma): ";
    getline(cin, inputTujuan);

    int hargaMaks;
    cout << "Masukkan harga maksimal (dalam ribuan, contoh: 70000): ";
    cin >> hargaMaks;

    if (hargaMaks < 0) {
        cout << "Harga tidak boleh negatif. Program dihentikan.\n";
        return 1;
    }

    vector<string> tujuanUser = app.splitTujuan(inputTujuan);
    vector<Produk> hasil = app.cariRekomendasi(jenisKulit, tujuanUser, hargaMaks);

    cout << "\n=== Rekomendasi Produk ===\n";
    if (hasil.empty()) {
        cout << "Maaf, tidak ada produk yang cocok dengan preferensi Anda.\n";
    } else {
        for (Produk& p : hasil) {
            tampilkanRekomendasi(&p);
        }
    }

    cout << "\nTerima kasih telah menggunakan sistem rekomendasi skincare!\n";
    return 0;
}
